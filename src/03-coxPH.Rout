
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> 
> rm(list=ls())
> source(paste0(here::here(), "/0-config.R"))
── Attaching packages ─────────────────────────────────────── tidyverse 1.3.0 ──
✔ ggplot2 3.3.2     ✔ purrr   0.3.4
✔ tibble  3.0.3     ✔ dplyr   1.0.1
✔ tidyr   1.1.1     ✔ stringr 1.4.0
✔ readr   1.3.1     ✔ forcats 0.5.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
here() starts at /home/andrew.mertens/ki-mortality
Loading required package: Matrix

Attaching package: ‘Matrix’

The following objects are masked from ‘package:tidyr’:

    expand, pack, unpack

Loading 'metafor' package (version 2.4-0). For an overview 
and introduction to the package please type: help(metafor).

Attaching package: ‘data.table’

The following objects are masked from ‘package:dplyr’:

    between, first, last

The following object is masked from ‘package:purrr’:

    transpose

Loading required package: viridisLite
Loading required package: ggpubr
Loading required package: lattice

Attaching package: ‘caret’

The following object is masked from ‘package:survival’:

    cluster

The following object is masked from ‘package:purrr’:

    lift

> 
> #Set adjustment covariates
> Wvars <- c("sex", "arm", "brthmon", "vagbrth", "hdlvry", "single", "trth2o",       
+  "cleanck",       "impfloor",      "hfoodsec",      "hhwealth_quart","W_mage",        "W_mhtcm",       "W_mwtkg",      
+   "W_mbmi",        "W_fage",        "W_fhtcm",       "W_meducyrs",    "W_feducyrs",    "W_nrooms",      "W_nhh",        
+   "W_nchldlt5",    "W_parity",      "impsan",        "safeh20")     
> 
> #load data
> d <- readRDS(mortality_age_path)
> 
> d$subjid <- as.numeric(d$subjid)
> d <- d %>% arrange(studyid, subjid, agedays)
> table(d$studyid)

Burkina Faso Zn       GMS-Nepal      iLiNS-DOSE    iLiNS-DYAD-M        JiVitA-3 
          18969           14163           19082           10407          123257 
       JiVitA-4          Keneba         PROVIDE    SAS-CompFeed   SAS-FoodSuppl 
          39814           43720           14807            9541            2247 
      VITAMIN-A        ZVITAMBO 
          32774           75824 
> 
> #TEMP drop new studies
> d <- d %>% filter(!(studyid %in% c("VITALPAK-Pregnancy","iLiNS-DYAD-G","DIVIDS")))
> 
> 
> #Steps for each analysis:
> #1) drop imputed agedth if needed
> #2) drop observations other than the age category of interest
> #3) Create survival outcome
> summary(d$agedays)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
    1.0    59.0   192.0   275.3   393.0  5178.0 
> table(d$agecat)

     (0,30]     (30,91]    (91,182]   (182,365]   (365,730] (730,7e+03] 
      56854       63201       56551       93804       98730       35465 
> d <- d %>% filter(agedays <= 730)
> #d <- d %>% filter(studyid=="ZVITAMBO")
> d <- droplevels(d)
> 
> #Drop imputed age of death and studies with only imputed age of death
> df <- d %>% filter(dead==1)
> table(df$studyid, df$imp_agedth)
                 
                     0    1
  Burkina Faso Zn   45    0
  GMS-Nepal          2    6
  iLiNS-DOSE        48    5
  iLiNS-DYAD-M      54    1
  JiVitA-3         960    0
  JiVitA-4          49    0
  Keneba            74    0
  PROVIDE            4    0
  SAS-CompFeed       0   52
  SAS-FoodSuppl      0    6
  VITAMIN-A        108    0
  ZVITAMBO        1067   56
> 
> d <- d %>% filter(imp_agedth==0,
+                   !(studyid %in% c("GMS-Nepal","SAS-CompFeed","SAS-FoodSuppl")))
> 
> 
> 
> #Covariates adjustment set
> #Wvars <- c("agedays", "", "")
> 
> 
> #Now expand this coding across outcomes/age categories
> 
> # res1 <- d %>% 
> #   filter(!is.na(ever_wast)& !is.na(dead)) %>% 
> #   group_by(studyid) %>%
> #   mutate(Ndead=sum(dead)) %>% filter(Ndead>4) %>% droplevels(.) %>%
> #   do(ki_coxph(d=., Xvar="ever_wast")) %>%
> #   mutate(pooled=0)
> # 
> # poolHR <- poolHR(res1) %>% mutate(pooled=1)
> # 
> # res <- bind_rows(res1, poolHR) %>%
> #   mutate(X= "ever_wast", Y= "dead")
> 
> X_vector <- c("stunt", "wast","wast_muac","underwt",          
+               "sstunt",          "swast","swast_muac",            "sunderwt",         "stunt_uwt",       
+               "wast_uwt",         "co",              
+               "ever_stunt",       "ever_wast", "ever_wast_muac",        "ever_uwt",         "ever_sstunt",     
+               "ever_swast", "ever_swast_muac","ever_suwt",        "ever_stunt_uwt",   "ever_wast_uwt",    "ever_co")
> 
> 
> 
> # df <- d %>% filter(studyid=="Keneba")
> # 
> # Yvar="dead"
> # age=NULL
> # Xvar="wast"
> # W=Wvars
> # d=df
> # #res <- ki_coxph(d=df, Xvar="ever_stunt", W=Wvars)
> # 
> # for(i in X_vector){
> #    cat(i)
> #    res <- ki_coxph(d=df, Xvar=i, W=Wvars)
> #    
> # }
> 
> #temp
> # res_sex_temp <- cox_meta(d=d, Xvar=X_vector[1], Yvar="dead", W=NULL, V="sex")
> # 
> # 
> # V="sex"
> # Y="dead"
> 
> #All ages < 730 days
> res <- run_cox_meta(df=d, X_vector=X_vector, Y="dead", Wvars=Wvars, V=NULL)
Note: Using an external vector in selections is ambiguous.
ℹ Use `all_of(W)` instead of `W` to silence this message.
ℹ See <https://tidyselect.r-lib.org/reference/faq-external-vector.html>.
This message is displayed once per session.
Loading required package: lmtest
Loading required package: zoo

Attaching package: ‘zoo’

The following objects are masked from ‘package:base’:

    as.Date, as.Date.numeric

